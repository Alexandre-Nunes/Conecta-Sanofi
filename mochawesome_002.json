{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2022-01-01T08:15:21.208Z",
    "end": "2022-01-01T08:15:40.567Z",
    "duration": 19359,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "f535020c-3685-4620-94b9-fba98152dbb5",
      "title": "",
      "fullFile": "cypress/integration/cadastro.spec.js",
      "file": "cypress/integration/cadastro.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8afaa506-c8f9-4b3b-abaf-bab154321a02",
          "title": "Cadastro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tentar realizar cadastro de Médico com registro invalido",
              "fullTitle": "Cadastro Tentar realizar cadastro de Médico com registro invalido",
              "timedOut": null,
              "duration": 19296,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_cadastro.default.cadastroMedicoComRegistroInvalido();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.c-internal-login__login-button`, but never found it.\n\nBecause this error occurred during a `before each` hook we are skipping all of the remaining tests.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.c-internal-login__login-button`, but never found it.\n\nBecause this error occurred during a `before each` hook we are skipping all of the remaining tests.\n    at LoginSistema.acessarSistema (https://stg-cd.sanoficonecta.com.br/__cypress/tests?p=cypress/integration/cadastro.spec.js:2491:8)\n    at Context.eval (https://stg-cd.sanoficonecta.com.br/__cypress/tests?p=cypress/integration/cadastro.spec.js:2231:25)",
                "diff": null
              },
              "uuid": "195c6264-f4ce-4cdf-bf4e-2b16c6c4e11c",
              "parentUUID": "8afaa506-c8f9-4b3b-abaf-bab154321a02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentar realizar cadastro de Médico sem aceitar os termos",
              "fullTitle": "Cadastro Tentar realizar cadastro de Médico sem aceitar os termos",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_cadastro.default.cadastroMedicoSemAceitarTermos();",
              "err": {},
              "uuid": "7b5eb03e-767b-4633-9a14-0b25965b110b",
              "parentUUID": "8afaa506-c8f9-4b3b-abaf-bab154321a02",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Tentar realizar cadastro de Médico com registro já cadastrado",
              "fullTitle": "Cadastro Tentar realizar cadastro de Médico com registro já cadastrado",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_cadastro.default.cadastroMedicoComRegistroJaCadastrado();",
              "err": {},
              "uuid": "1afeb74e-e298-4789-bcaa-f6e8c43699c3",
              "parentUUID": "8afaa506-c8f9-4b3b-abaf-bab154321a02",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Tentar realizar cadastro de Médico com email já cadastrado",
              "fullTitle": "Cadastro Tentar realizar cadastro de Médico com email já cadastrado",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_cadastro.default.cadastroMedicoComEmailJaCadastrado();",
              "err": {},
              "uuid": "b0d4a011-8b13-435a-a3b5-60c118a5560f",
              "parentUUID": "8afaa506-c8f9-4b3b-abaf-bab154321a02",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Tentar realizar cadastro de Médico sem informar os dados obrigatórios",
              "fullTitle": "Cadastro Tentar realizar cadastro de Médico sem informar os dados obrigatórios",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_cadastro.default.cadastroMedicoSemInformarDadosObrigatorios();",
              "err": {},
              "uuid": "0524e376-f895-498a-9fb6-1884608ae981",
              "parentUUID": "8afaa506-c8f9-4b3b-abaf-bab154321a02",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Realizar cadastro de Nutricionista com sucesso",
              "fullTitle": "Cadastro Realizar cadastro de Nutricionista com sucesso",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_cadastro.default.cadastroNutricionista();",
              "err": {},
              "uuid": "384b496a-f129-41dc-84b3-318d37f793af",
              "parentUUID": "8afaa506-c8f9-4b3b-abaf-bab154321a02",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "195c6264-f4ce-4cdf-bf4e-2b16c6c4e11c"
          ],
          "pending": [],
          "skipped": [
            "7b5eb03e-767b-4633-9a14-0b25965b110b",
            "1afeb74e-e298-4789-bcaa-f6e8c43699c3",
            "b0d4a011-8b13-435a-a3b5-60c118a5560f",
            "0524e376-f895-498a-9fb6-1884608ae981",
            "384b496a-f129-41dc-84b3-318d37f793af"
          ],
          "duration": 19296,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}